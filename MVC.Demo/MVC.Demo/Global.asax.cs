using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Optimization;
using System.Web.Routing;
using MVC.Demo.App_GlobalResources;
using MVC.Demo.ModelBinders;

namespace MVC.Demo
{
    public class MvcApplication : System.Web.HttpApplication
    {
        protected void Application_Start()
        {
            AreaRegistration.RegisterAllAreas();
            FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
            RouteConfig.RegisterRoutes(RouteTable.Routes);
            BundleConfig.RegisterBundles(BundleTable.Bundles);

            ModelBinderProviders.BinderProviders.Add(new EFModelBinderProviderMvc());

            // These two lines of code refer to the name of the class generated by .NET to retrieve resources from the respective
            // .resx files. These files must live in the App_GlobalResources folder to make this work.

            // To translate the FieldMustBeNumeric and FieldMustBeDate errors:
            ClientDataTypeModelValidatorProvider.ResourceClassKey = "ModelResources"; 

            // To translate the PropertyValueInvalid error (and PropertyValueRequired in MVC 2):
            DefaultModelBinder.ResourceClassKey = "ModelResources";

            // Since MVC 3, you need this to replace the default "required" error:
            DataAnnotationsModelValidatorProvider.RegisterAdapter(typeof(RequiredAttribute),
                                                                  typeof(TranslatedRequiredAttributeAdapter));

            // You can also add other adapters:
            DataAnnotationsModelValidatorProvider.RegisterAdapter(typeof(RangeAttribute),
                                                                  typeof(TranslatedRangeAttributeAdapter));
        }
    }

    public class TranslatedRequiredAttributeAdapter : RequiredAttributeAdapter
    {
        public TranslatedRequiredAttributeAdapter(ModelMetadata metadata, ControllerContext context, RequiredAttribute attribute)
            : base(metadata, context, attribute)
        {
            if (attribute.ErrorMessageResourceType == null)
            {
                attribute.ErrorMessageResourceType = typeof(ModelResources);
            }
            if (attribute.ErrorMessageResourceName == null)
            {
                attribute.ErrorMessageResourceName = "Required";
            }
        }
    }

    public class TranslatedRangeAttributeAdapter : RangeAttributeAdapter
    {
        public TranslatedRangeAttributeAdapter(ModelMetadata metadata, ControllerContext context, RangeAttribute attribute)
            : base(metadata, context, attribute)
        {
            if (attribute.ErrorMessageResourceType == null)
            {
                attribute.ErrorMessageResourceType = typeof(ModelResources);
            }
            if (attribute.ErrorMessageResourceName == null)
            {
                attribute.ErrorMessageResourceName = "Range";
            }
        }
    }
}
